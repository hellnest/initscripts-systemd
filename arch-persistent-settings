#!/bin/bash
#
# /lib/systemd/arch-settings
#

. /etc/rc.conf

# Update timezone if: The timezone is set in rc.conf, the corresponding
# zoneinfo file exists and rc.conf has been changed since the timezone was last
# updated
if [[ -n $TIMEZONE && -f /usr/share/zoneinfo/$TIMEZONE ]]; then
	/bin/cp --remove-destination "/usr/share/zoneinfo/$TIMEZONE" /etc/localtime
fi

# Adding persistent network/cdrom generated rules (this should probably be done
# differently, upstream specifically recomends against relying on /dev/.udev)
for rulesfile in 70-persistent-{cd,net}.rules; do
	if [[ -f /dev/.udev/tmp-rules--$rulesfile ]]; then
		/bin/cat /dev/.udev/tmp-rules--$rulesfile >> /etc/udev/rules.d/$rulesfile
	fi
done

# Build module blacklist if rc.conf has been updated since blacklist.sys.conf
# was last updated
if [[ /etc/rc.conf -nt /etc/modprobe.d/rc.conf ]]; then
	echo "# Autogenerated by systemd, do not edit" > /etc/modprobe.d/rc.conf 
	# do NOT quote this
	mods=(${MODULES[@]/#[^!]*})
	(( ${#mods[@]} )) && printf 'install %s /bin/false\n' ${mod#!} >> /etc/modprobe.d/rc.conf
	unset mods
fi

# Build module list if rc.conf has been updated since modules-load.d/rc.conf
# was last updated
if [[ /etc/rc.conf -nt /etc/modules-load.d/rc.conf ]]; then
	echo "# Autogenerated by systemd, do not edit" > /etc/modules-load.d/rc.conf 
	mods=(${MODULES[@]/#!*})
	(( ${#mods[@]} )) && printf "%s\n" ${mods[@]} >> /etc/modules-load.d/rc.conf
	unset mods
fi

# vim: set noet ts=2 sw=2:
